$brainMapper = ea.m.dsToNpnds(npnds = ds.num.mlp(innerLayerRatio = 0.5; nOfInnerLayers = 1))
$objName = "arena.coverage[10x10]"
$eRpresentation = ea.representation.pair(
  first = ea.representation.doubleString();
  second = ea.representation.intString(mutations = [ea.r.go.oneMutation(mutations = [ea.r.go.isSymbolCopyMutation(); ea.r.go.isFlipMutation()])])
)
$duration = 45
$bodySize = 4
$brainSize = 29
$bodyEpistasis = f.as(of = ea.f.intraEpistasis(of = f.pairSecond(of = ea.f.genotype()); endOffset = $brainSize); name = "body.epistasis")
$brainEpistasis = f.as(of = ea.f.intraEpistasis(of = f.pairSecond(of = ea.f.genotype()); startOffset = $bodySize); name = "brain.epistasis")
$globalEpistasis = f.as(of = ea.f.intraEpistasis(of = f.pairSecond(of = ea.f.genotype())); name = "global.epistasis")
$crossEpistasis = f.as(of = ea.f.crossEpistasis(of = f.pairSecond(of = ea.f.genotype()); splitOffset = $bodySize); name = "cross.epistasis")
$descriptors = [
  ea.s.me.d.descriptor(f = $bodyEpistasis; nOfBins = 4);
  ea.s.me.d.descriptor(f = $brainEpistasis; nOfBins = 8)
]

ea.experiment(
  runs = (randomGenerator = (seed = [1:1:30]) * [m.defaultRG()]) *
  (solver = (nEval = [50000]) *
  [
    ea.s.mapElites(
      name = "me-epistasis-0.2";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 0.2))
      );
      representation = $eRpresentation;
      descriptors = $descriptors
    );
    ea.s.mapElites(
      name = "me-epistasis-0.5";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 0.5))
      );
      representation = $eRpresentation;
      descriptors = $descriptors
    );
    ea.s.mapElites(
      name = "me-epistasis-1.0";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 1))
      );
      representation = $eRpresentation;
      descriptors = $descriptors
    );
    ea.s.mapElites(
      name = "me-epistasis-2.0";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 2))
      );
      representation = $eRpresentation;
      descriptors = $descriptors
    );
    ea.s.mapElites(
      name = "me-epistasis-5.0";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 5))
      );
      representation = $eRpresentation;
      descriptors = $descriptors
    );
    ea.s.ga(
      name = "ga-single-ds";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter()
      );
      representation = ea.representation.doubleString()
    );
    ea.s.ga(
      name = "ga-epistasis-0.2";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 0.2))
      );
      representation = $eRpresentation
    );
    ea.s.ga(
      name = "ga-epistasis-0.5";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 0.5))
      );
      representation = $eRpresentation
    );
    ea.s.ga(
      name = "ga-epistasis-1.0";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 1))
      );
      representation = $eRpresentation
    );
    ea.s.ga(
      name = "ga-epistasis-2.0";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 2))
      );
      representation = $eRpresentation
    );
    ea.s.ga(
      name = "ga-epistasis-5.0";
      mapper = ea.mapper.pair(
        first = ea.m.identity();
        second = $brainMapper;
        of = ea.m.splitter(of = ea.m.isIndexed(relativeLength = 5))
      );
      representation = $eRpresentation
    )
  ]) *
  [ea.run(
    problem = ea.p.simToSbbmo(
      simulation = ds.s.variableSensorPositionsNavigation(arena = e_maze; nOfSensors = $bodySize; finalT = $duration);
      toMaxObjectives = [ds.e.n.arenaCoverage()]
    )
  );
  ea.run(
    problem = ea.p.simToSbbmo(
      simulation = ds.s.variableSensorPositionsNavigation(arena = y_maze; nOfSensors = $bodySize; finalT = $duration);
      toMaxObjectives = [ds.e.n.arenaCoverage()]
    )
  )];
  listeners = [
    ea.l.console(
      functions = [
        f.mapValue(key = $objName; of = ea.f.behaviorQuality(of = ea.f.quality(of = ea.f.best())); format = "%6.4f");
        ea.f.size(of = ea.f.genotype(of = ea.f.best()); format = "%3d");
        ea.f.size(of = f.pairFirst(of = ea.f.genotype(of = ea.f.best())); format = "%3d");
        ea.f.size(of = f.pairSecond(of = ea.f.genotype(of = ea.f.best())); format = "%3d");
        f.composition(of = ea.f.best(); then = $bodyEpistasis);
        f.composition(of = ea.f.best(); then = $brainEpistasis);
        f.composition(of = ea.f.best(); then = $globalEpistasis);
        f.composition(of = ea.f.best(); then = $crossEpistasis)
      ];
      onlyLast = true
    );
    ea.l.bestCsv(
      path = "./results/{name}/{startTime}/results.csv";
      functions = [
        f.mapValue(key = $objName; of = ea.f.behaviorQuality(of = ea.f.quality(of = ea.f.best())); format = "%6.4f");
        ea.f.size(of = ea.f.genotype(of = ea.f.best()); format = "%3d");
        ea.f.size(of = f.pairFirst(of = ea.f.genotype(of = ea.f.best())); format = "%3d");
        ea.f.size(of = f.pairSecond(of = ea.f.genotype(of = ea.f.best())); format = "%3d");
        f.composition(of = ea.f.best(); then = $bodyEpistasis);
        f.composition(of = ea.f.best(); then = $brainEpistasis);
        f.composition(of = ea.f.best(); then = $globalEpistasis);
        f.composition(of = ea.f.best(); then = $crossEpistasis);
        f.avg(of = f.each(of = ea.f.all(); mapF = $bodyEpistasis));
        f.avg(of = f.each(of = ea.f.all(); mapF = $brainEpistasis));
        f.avg(of = f.each(of = ea.f.all(); mapF = $globalEpistasis));
        f.avg(of = f.each(of = ea.f.all(); mapF = $crossEpistasis));
        f.sd(of = f.each(of = ea.f.all(); mapF = $bodyEpistasis));
        f.sd(of = f.each(of = ea.f.all(); mapF = $brainEpistasis));
        f.sd(of = f.each(of = ea.f.all(); mapF = $globalEpistasis));
        f.sd(of = f.each(of = ea.f.all(); mapF = $crossEpistasis))
      ];
      runFunctions = [
        ea.f.runKey(key = "run.problem.simulation.arena")
      ];
      onlyLast = false
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.quality(q = f.mapValue(key = $objName; of = ea.f.behaviorQuality()));
      overwrite = true;
      path = "./results/{name}/{startTime}/best-fitness"
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.composition(of = ea.f.best(); then = $globalEpistasis));
      overwrite = true;
      path = "./results/{name}/{startTime}/best.global.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.composition(of = ea.f.best(); then = $globalEpistasis));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.best.global.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.composition(of = ea.f.best(); then = $bodyEpistasis));
      overwrite = true;
      path = "./results/{name}/{startTime}/best.body.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.composition(of = ea.f.best(); then = $bodyEpistasis));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.best.body.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.composition(of = ea.f.best(); then = $brainEpistasis));
      overwrite = true;
      path = "./results/{name}/{startTime}/best.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.composition(of = ea.f.best(); then = $brainEpistasis));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.best.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.composition(of = ea.f.best(); then = $crossEpistasis));
      overwrite = true;
      path = "./results/{name}/{startTime}/best.cross.body.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.composition(of = ea.f.best(); then = $crossEpistasis));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.best.cross.body.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.avg(of = f.each(of = ea.f.all(); mapF = $globalEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/avg.global.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.avg(of = f.each(of = ea.f.all(); mapF = $globalEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.avg.global.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.avg(of = f.each(of = ea.f.all(); mapF = $bodyEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/avg.body.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.avg(of = f.each(of = ea.f.all(); mapF = $bodyEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.avg.body.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.avg(of = f.each(of = ea.f.all(); mapF = $brainEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/avg.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.avg(of = f.each(of = ea.f.all(); mapF = $brainEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.avg.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.avg(of = f.each(of = ea.f.all(); mapF = $crossEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/avg.cross.body.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.avg(of = f.each(of = ea.f.all(); mapF = $crossEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.avg.cross.body.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.sd(of = f.each(of = ea.f.all(); mapF = $globalEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/sd.global.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.sd(of = f.each(of = ea.f.all(); mapF = $globalEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.sd.global.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.sd(of = f.each(of = ea.f.all(); mapF = $bodyEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/sd.body.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.sd(of = f.each(of = ea.f.all(); mapF = $bodyEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.sd.body.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.sd(of = f.each(of = ea.f.all(); mapF = $brainEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/sd.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.sd(of = f.each(of = ea.f.all(); mapF = $brainEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.sd.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.xyExp(y = f.sd(of = f.each(of = ea.f.all(); mapF = $crossEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/sd.cross.body.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      plot = ea.plot.multi.yBoxplotExp(y = f.sd(of = f.each(of = ea.f.all(); mapF = $crossEpistasis)));
      overwrite = true;
      path = "./results/{name}/{startTime}/final.sd.cross.body.brain.epistasis";
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = ".*-epistasis-.*")
    );
    ea.l.savePlotAndCsvForRun(
      path = "./results/{name}/{startTime}/{run.solver.name}/{run.problem.name}/archive-{run.randomGenerator.seed:%03d}";
      plot = ea.plot.single.me(q = f.mapValue(key = $objName; of = ea.f.behaviorQuality()));
      condition = predicate.matches(f = ea.f.runKey(key = "run.solver.name"); regex = "me-.*")
    );
    ea.l.saveForRun(
      of = ea.acc.lastBest();
      path = "./results/{name}/{startTime}/{run.solver.name}/{run.problem.name}/best-traj-{run.randomGenerator.seed:%03d}";
      processor = ea.f.toImage(image = ds.d.navigation(); of = ea.f.behavior(of = ea.f.quality()))
    )
  ]
)
